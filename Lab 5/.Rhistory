knitr::opts_chunk$set(echo = TRUE)
# libraries used in this lab
library(ggplot2)
#install.packages("boot") # to create booststarp
library(boot)
# scatterplot
rm(list=ls())
data1 = read.csv2("lottery.csv")
Y = data1$Draft_No
X = data1$Day_of_year
plot_11 = ggplot(data = data1,aes(x = X, y = Y)) +
geom_point()
plot_11
plot_12 = plot_11 +
geom_smooth(model ="loess") + # `geom_smooth()` using method = 'loess' and formula 'y ~ x' - thatÂ´s correct
ylab(expression(hat(Y)))
plot_12
# code frome slide 17
stat1 <- function(data,vn){
data<-as.data.frame(data[vn,])
res<-lm(Response~Predictor,data)
res$coefficients[2]
}
# use non parametric bootstrap
# need data = data1, statistic = loess & test stat, R = 200
stats = function(data,vn){
data<-data[vn,]
# Y=Draft No & X=Day of year
# create the loess regression
reg = loess(Draft_No ~ Day_of_year,
data = data)
# get the min and max positions of x - for fit
X_b = which.max(reg$fitted)
X_a = which.min(reg$fitted)
# fit regression for x values
fit_X_b = reg$fitted[X_b]
fit_X_a = reg$fitted[X_a]
# the given test statistic
T_stat = (fit_X_b - fit_X_a) / (data$Day_of_year[X_b] - data$Day_of_year[X_a])
return(T_stat)
}
#bootstrap
set.seed(311015)
myboot = boot(data = data1,
statistic = stats,
R = 2000)
# plot distribution
plot(myboot, index = 1)
# this plot is not nice
plot_13_data = data.frame("t" = myboot$t,
"index" = 1:length(myboot$t))
mean_t = mean(myboot$t)
plot_13 = ggplot(data = plot_13_data, aes(x = t)) +
ggtitle("Histogram of t") +
geom_histogram(aes(y=..density..),
colour="black",
fill="white",
bins=100) +
geom_vline(aes(xintercept = mean_t, color = "red"))
plot_13
# calculate the p-value
# lecture slide 11
p_val = sum(myboot$t >= 0)/length(myboot$t)
p_val
# code from the lecture - slide 12.a
mouse<-read.csv("mouse.csv",sep=";",header=TRUE)
